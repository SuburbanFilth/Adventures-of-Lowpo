Rendering:
  ☐ shadows
  ☐ debug mode rendering
  ☐ dont generate normals manually, but load them from models.
Physics:
  ☐ object movement with both input and physics sim. Should find a way to be able to sync those to flow through the physics system.
  ☐ Resolving interpenetration
  ☐ the grid uses the positive z axis but open gl uses the negative z axis as forward. Need to sync this.
  ☐ Collision response @started(19-08-24 19:39)
    ✔  Plane Collider @started(19-09-26 22:30) @done (19-09-27 23:48) @lasted(1 day, 1:18)
    ✔ Add Plane Unit tests @started(19-09-27 23:48) @done (19-09-28 21:21) @lasted(21:33)
      ✔ plane test @done (19-09-28 00:07)
      ✔ cell test @done (19-09-28 00:15)
      ✔ grid test @done (19-09-28 20:06)
      ✔ collision detector test @done (19-09-28 20:06)
  ☐ PhysicsSystem Unit test @started(19-10-06 15:22)
      ☐ Data Loading (test and implementation)
      ☐ Simulation
  ☐ Blender Physics Exporter - write an exporter that would go through the entities and and get their physics properties and write them out in an xml file that we can then use. This saves time as we wont have to do any manual modifications to the file.
  ☐ Move the elasticity to the colliders. Rather than using one elasticity for all types of collision, every collider should be able to specify its own elasticity.
  ☐ update the Solve function to avoid unecessary calculations when one of the objects is static.
General:
  ☐ Investigate a bug where the whole game freezes on startup
  ☐ Loader - stride used in geometry class assumes that each section (normals, vertex etc) will contain 3 floats. Fix that to not be hard-coded number.
  ☐ Hot Loading Variables - see Johnatan Blow's videos
  ☐ Logging
  Unit Tests:
    ✔ Grid unit tests @today @done (19-08-24 17:33)
      ✔ refactor the GetContactBetweenEdges method @started(19-08-24 12:30) @done (19-08-24 17:33) @lasted(5:03)
Animation:
  ☐ Animation Implementation
  ☐ Animation Blending

Game Design:
  ☐ game story